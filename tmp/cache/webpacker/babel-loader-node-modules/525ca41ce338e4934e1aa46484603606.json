{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { Controller } from \"stimulus\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_Controller) {\n  _inherits(_default, _Controller);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"addBody\",\n    value: function addBody() {\n      var content = this.bodyTarget.value;\n      this.addTarget.insertAdjacentHTML('beforebegin', \"<li>\" + content + \"</li>\");\n    }\n  }, {\n    key: \"showAll\",\n    value: function showAll() {\n      this.showTarget.style.visibility = \"visible\";\n    }\n  }, {\n    key: \"upvote\",\n    value: function upvote() {\n      var post = event.target.closest(\".post\");\n      post.insertAdjacentHTML('beforeend', '<i class=\"fa fa-check-circle\"></i>');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var post = event.target.closest(\".post\");\n      post.style.visibility = \"hidden\";\n    }\n  }]);\n\n  return _default;\n}(Controller);\n\n_default.targets = [\"body\", \"add\", \"show\"];\nexport { _default as default };","map":{"version":3,"sources":["/app/app/javascript/controllers/posts_controller.js"],"names":["Controller","content","bodyTarget","value","addTarget","insertAdjacentHTML","showTarget","style","visibility","post","event","target","closest","targets"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,UAA3B;;;;;;;;;;;;;;;8BAMc;AACN,UAAIC,OAAO,GAAG,KAAKC,UAAL,CAAgBC,KAA9B;AACA,WAAKC,SAAL,CAAeC,kBAAf,CAAkC,aAAlC,EAAiD,SAASJ,OAAT,GAAmB,OAApE;AACH;;;8BAES;AACN,WAAKK,UAAL,CAAgBC,KAAhB,CAAsBC,UAAtB,GAAmC,SAAnC;AACH;;;6BAEQ;AACL,UAAIC,IAAI,GAAGC,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqB,OAArB,CAAX;AACAH,MAAAA,IAAI,CAACJ,kBAAL,CAAwB,WAAxB,EAAqC,oCAArC;AACH;;;6BAEQ;AACL,UAAII,IAAI,GAAGC,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqB,OAArB,CAAX;AACAH,MAAAA,IAAI,CAACF,KAAL,CAAWC,UAAX,GAAwB,QAAxB;AACH;;;;EArBwBR,U;;SAElBa,O,GAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,C","sourcesContent":["import { Controller } from \"stimulus\"\n\nexport default class extends Controller {\n\n    static targets = [\"body\", \"add\", \"show\"]\n\n    addBody() {\n        let content = this.bodyTarget.value;\n        this.addTarget.insertAdjacentHTML('beforebegin', \"<li>\" + content + \"</li>\");\n    }\n\n    showAll() {\n        this.showTarget.style.visibility = \"visible\";\n    }\n\n    upvote() {\n        let post = event.target.closest(\".post\");\n        post.insertAdjacentHTML('beforeend', '<i class=\"fa fa-check-circle\"></i>');\n    }\n\n    remove() {\n        let post = event.target.closest(\".post\");\n        post.style.visibility = \"hidden\";\n    }\n} \n"]},"metadata":{},"sourceType":"module"}